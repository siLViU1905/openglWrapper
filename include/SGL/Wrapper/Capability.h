#ifndef CAPABILITIES_H
#define CAPABILITIES_H
#include "../../GL/glad.h"
#include <cstdint>

namespace GL
{
    enum class Capability : uint32_t
    {
        // RENDERING & BLENDING
        BLEND = GL_BLEND,
        DITHER = GL_DITHER,
        COLOR_LOGIC_OP = GL_COLOR_LOGIC_OP,
        FRAMEBUFFER_SRGB = GL_FRAMEBUFFER_SRGB,

        // DEPTH & STENCIL TESTING
        DEPTH_TEST = GL_DEPTH_TEST,
        DEPTH_CLAMP = GL_DEPTH_CLAMP,
        STENCIL_TEST = GL_STENCIL_TEST,

        // CULLING & CLIPPING
        CULL_FACE = GL_CULL_FACE,
        CLIP_DISTANCE0 = GL_CLIP_DISTANCE0,
        CLIP_DISTANCE1 = GL_CLIP_DISTANCE1,
        CLIP_DISTANCE2 = GL_CLIP_DISTANCE2,
        CLIP_DISTANCE3 = GL_CLIP_DISTANCE3,
        CLIP_DISTANCE4 = GL_CLIP_DISTANCE4,
        CLIP_DISTANCE5 = GL_CLIP_DISTANCE5,
        CLIP_DISTANCE6 = GL_CLIP_DISTANCE6,
        CLIP_DISTANCE7 = GL_CLIP_DISTANCE7,
        SCISSOR_TEST = GL_SCISSOR_TEST,

        // ANTI-ALIASING & SMOOTHING
        LINE_SMOOTH = GL_LINE_SMOOTH,
        POLYGON_SMOOTH = GL_POLYGON_SMOOTH,
        MULTISAMPLE = GL_MULTISAMPLE,

        // SAMPLING & COVERAGE
        SAMPLE_ALPHA_TO_COVERAGE = GL_SAMPLE_ALPHA_TO_COVERAGE,
        SAMPLE_ALPHA_TO_ONE = GL_SAMPLE_ALPHA_TO_ONE,
        SAMPLE_COVERAGE = GL_SAMPLE_COVERAGE,
        SAMPLE_SHADING = GL_SAMPLE_SHADING,
        SAMPLE_MASK = GL_SAMPLE_MASK,

        // POLYGON OFFSET
        POLYGON_OFFSET_FILL = GL_POLYGON_OFFSET_FILL,
        POLYGON_OFFSET_LINE = GL_POLYGON_OFFSET_LINE,
        POLYGON_OFFSET_POINT = GL_POLYGON_OFFSET_POINT,

        // PRIMITIVE OPERATIONS
        PRIMITIVE_RESTART = GL_PRIMITIVE_RESTART,
        PRIMITIVE_RESTART_FIXED_INDEX = GL_PRIMITIVE_RESTART_FIXED_INDEX,
        RASTERIZER_DISCARD = GL_RASTERIZER_DISCARD,
        PROGRAM_POINT_SIZE = GL_PROGRAM_POINT_SIZE,

        // TEXTURING
        TEXTURE_CUBE_MAP_SEAMLESS = GL_TEXTURE_CUBE_MAP_SEAMLESS,

        // DEBUG
        DEBUG_OUTPUT = GL_DEBUG_OUTPUT,
        DEBUG_OUTPUT_SYNCHRONOUS = GL_DEBUG_OUTPUT_SYNCHRONOUS
    };
}

#endif //CAPABILITIES_H
